\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{sty/equations}[Beatify multiple equations with comments and alignment.]

\RequirePackage{amsmath}        % provide basic math components
\RequirePackage{amssymb}        % provide QED square symbol
\RequirePackage{IEEEtrantools}  % provide {IEEEeqnarray} to align equations and their comments
\RequirePackage{array}          % provide {array} to draw a vertical line next to the comments
\RequirePackage{siunitx}        % provide \unit to display commentunits
\RequirePackage{etoolbox}       % add methods to an environment
\RequirePackage{xifthen}        % detect empty arguments


\makeatletter % Grant access to internal macros (Name contains an @).

%%%%%%%%%%%%%%%%%%%% PACKAGE: DEFINE GLOBAL VARIABLES %%%%%%%%%%%%%%%%%%%%

\def\gnewcommand{\g@star@or@long\gnew@command}
\def\grenewcommand{\g@star@or@long\grenew@command}
\def\g@star@or@long#1{% 
  \@ifstar{\let\l@ngrel@x\global#1}{\def\l@ngrel@x{\long\global}#1}}
\def\gnew@command#1{\@testopt{\@gnewcommand#1}0}
\def\@gnewcommand#1[#2]{%
  \kernel@ifnextchar [{\@gxargdef#1[#2]}%
                {\@argdef#1[#2]}}  
\let\@gxargdef\@xargdef
\patchcmd{\@gxargdef}{\def}{\gdef}{}{}
\let\grenew@command\renew@command
\patchcmd{\grenew@command}{\new@command}{\gnew@command}{}{}

%%%%%%%%%%%%%%%%%%%% USER MACROS %%%%%%%%%%%%%%%%%%%%

\newcommand\newmathsymbol[2]{%
    \NewDocumentCommand{#1}{s}{% optional star (##1), no further parameters
      \IfBooleanTF{##1}% is starred variant?
        {\ensuremath{#2}}%
        {\@ThrowUnlessMath{#2}{#1}}%
    }%
}%

\newcommand\renewmathsymbol[2]{
    \RenewDocumentCommand{#1}{s}{% optional star (##1), no further parameters
      \IfBooleanTF{##1}% is starred variant?
        {\ensuremath{#2}}%
        {\@ThrowUnlessMath{#2}{#1}}%
    }%
}%

\newcommand\providemathsymbol[2]{
    \ProvideDocumentCommand{#1}{s}{% optional star (##1), no further parameters
      \IfBooleanTF{##1}% is starred variant?
        {\ensuremath{#2}}%
        {\@ThrowUnlessMath{#2}{#1}}%
    }%
}%

\newcommand\declaremathsymbol[2]{
    \DeclareDocumentCommand{#1}{s}{% optional star (##1), no further parameters
      \IfBooleanTF{##1}% is starred variant?
        {\ensuremath{#2}}%
        {\@ThrowUnlessMath{#2}{#1}}%
    }%
}%


\newenvironment{equations}[1][\@defaultColumnsSetup]
{
    \begin{IEEEeqnarray*}{#1l} % add a left-aligned description column
}
{
    \end{IEEEeqnarray*}
}
\newenvironment{equations*}[1][\@defaultColumnsSetup]
{
    \begin{IEEEeqnarray}{#1l} % add a left-aligned description column
}
{
    \end{IEEEeqnarray}
}

\newcommand{\setcommentwidth}[1]
{
    \ifthenelse{\isempty{#1}} % is parameter omitted?
    {
        \renewcommand{\@commentWidth}{0.33\columnwidth} % default width
    }
    {
        \renewcommand{\@commentWidth}{#1} % custom width
    }
}

%%%%%%%%%%%%%%%%%%%% ENVIRONMENT SPECIFIC USER MACROS %%%%%%%%%%%%%%%%%%%%

% make \intertext known to the IEEEeqnarray environment
\patchcmd{\@IEEEeqnarray}{\relax}{\relax\intertext@}{}{}

\AtBeginEnvironment{equations}
{
    \let\yessubnumber\IEEEyessubnumber   % standardize IEEEeqnarray's macro name
    \let\@builtinlabel\label   % Copy a reference to the build-in label macro to call later
%
    % Grant access to environment specific user macros
    \let\label\@YesNumber
    \let\sublabel\@YesSubnumber
    \let\comment\@SetComment
    \let\equnit\@SetEquationUnit
    \let\qed\@Qed
%
    \@ClearDescription
    \pretocmd{\@IEEEeqnarraycr}{\@RenderDescription}   % attach description rendering to end of the line
}

% Fix no description because of missing \\ in last equation
\AtEndEnvironment{equations}{\@RenderDescription}

%%%%%%%%%%%%%%%%%%%% INTERNAL MACROS %%%%%%%%%%%%%%%%%%%%

\newcommand{\@YesNumber}[1]
{
    \yesnumber
    \ifthenelse{\isempty{#1}}{}{\@builtinlabel{#1}} % don't create a label for empty names
}

\newcommand{\@YesSubnumber}[1]
{
    \yessubnumber
    \ifthenelse{\isempty{#1}}{}{\@builtinlabel{#1}} % don't create a label for empty names
}

\newcommand{\@ClearDescription}{\global\let\@description\relax} % \@description
\newcommand{\@RenderDescription}
{%
    \@ifundefined{@description}{}%
    {%
        \@description% Insert description
        \@ClearDescription% Reset description for next line
    }
}

\newcommand{\@SetComment}[1]
{
    \@ClearDescription
    \gnewcommand{\@description}
    {%
        &\quad%
        \begin{array}{|p{\@commentWidth}}%
            #1%
        \end{array}%
    }
}

\newcommand{\@SetEquationUnit}[1]
{
    \@ClearDescription
    \gnewcommand{\@description}
    {%
        &\quad%
        \left[%
            \unit{#1}%
        \right]%
    }
}

\newcommand{\@Qed}
{
    \intertext{\raggedleft $\Box$}
}

\newcommand\@ThrowUnlessMath[2]{%
    \relax\ifmmode%
        {#1}%
    \else%
        {\PackageError{equations}{Use #2* (without the space) instead of #2. The star variant is required outside math mode}{}}%
    \fi%
}

%%%%%%%%%%%%%%%%%%%% INTERNAL VARIABLES %%%%%%%%%%%%%%%%%%%%

\newcommand{\@description}{}
\newcommand{\@defaultColumnsSetup}{rCl}
\newcommand{\@commentWidth}{}
\setcommentwidth{} % initialize default value

%%%%%%%%%%%%%%%%%%%% DECRECATED MACROS %%%%%%%%%%%%%%%%%%%%

\newcommand{\eqnref}[1]{
    \eqref{#1}
    \PackageWarning{equations}{Use ⧵eqref instead of ⧵eqnref. The macro is deprecated}
}
\newcommand{\commentunit}[1]{
    \equnit{#1}
    \PackageWarning{equations}{Use ⧵equnit instead of ⧵commentunit. The macro is deprecated}
}

\makeatother % Revoke access to internal macros (Name contains an @).